// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // Put your code here:
	RAM8(in=in, load=load0, address=regaddr, out=regout0);
	RAM8(in=in, load=load1, address=regaddr, out=regout1);
	RAM8(in=in, load=load2, address=regaddr, out=regout2);
	RAM8(in=in, load=load3, address=regaddr, out=regout3);
	RAM8(in=in, load=load4, address=regaddr, out=regout4);
	RAM8(in=in, load=load5, address=regaddr, out=regout5);
	RAM8(in=in, load=load6, address=regaddr, out=regout6);
	RAM8(in=in, load=load7, address=regaddr, out=regout7);

	Mux8Way16(a=regout0, b=regout1, c=regout2, d=regout3, e=regout4, f=regout5, g=regout6, h=regout7, sel=address[0..2], out=regout);
}
